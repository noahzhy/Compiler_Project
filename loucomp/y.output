Terminals unused in grammar

   ENDFILE
   ERROR


State 100 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: decl_list

    2 decl_list: decl_list decl
    3          | decl

    4 decl: var_decl
    5     | fun_decl

    6 name: ID

    7 number: NUM

    8 var_decl: type_spec name SEMI
    9         | type_spec name LBRACE number RBRACE SEMI

   10 type_spec: INT
   11          | VOID

   12 @1: %empty

   13 fun_decl: type_spec name @1 LPAREN params RPAREN comp_stmt

   14 void_param: VOID

   15 params: param_list
   16       | void_param

   17 param_list: param_list COMMA param
   18           | param

   19 param: type_spec name
   20      | type_spec name LBRACE RBRACE

   21 comp_stmt: LCURLY local_decl stmt_list RCURLY

   22 local_decl: local_decl var_decl
   23           | %empty

   24 stmt_list: stmt_list stmt
   25          | %empty

   26 stmt: exp_stmt
   27     | comp_stmt
   28     | selec_stmt
   29     | iter_stmt
   30     | return_stmt

   31 exp_stmt: exp SEMI
   32         | SEMI

   33 selec_stmt: IF LPAREN exp RPAREN stmt
   34           | IF LPAREN exp RPAREN stmt ELSE stmt

   35 iter_stmt: WHILE LPAREN exp RPAREN stmt

   36 return_stmt: RETURN SEMI
   37            | RETURN exp SEMI

   38 exp: var ASSIGN exp
   39    | simple_exp

   40 var: name

   41 @2: %empty

   42 var: name @2 LBRACE exp RBRACE

   43 simple_exp: addit_exp relop addit_exp
   44           | addit_exp

   45 relop: LT
   46      | LE
   47      | GT
   48      | GE
   49      | EQ
   50      | NE

   51 addit_exp: addit_exp addop term
   52          | term

   53 addop: PLUS
   54      | MINUS

   55 term: term mulop factor
   56     | factor

   57 mulop: TIMES
   58      | OVER

   59 factor: LPAREN exp RPAREN
   60       | var
   61       | call
   62       | NUM

   63 @3: %empty

   64 call: name @3 LPAREN args RPAREN

   65 args: arg_list
   66     | %empty

   67 arg_list: arg_list COMMA exp
   68         | exp


Terminals, with rules where they appear

$end (0) 0
error (256)
IF (258) 33 34
ELSE (259) 34
WHILE (260) 35
RETURN (261) 36 37
INT (262) 10
VOID (263) 11 14
ID (264) 6
NUM (265) 7 62
ASSIGN (266) 38
EQ (267) 49
NE (268) 50
LT (269) 45
LE (270) 46
GT (271) 47
GE (272) 48
PLUS (273) 53
MINUS (274) 54
TIMES (275) 57
OVER (276) 58
LPAREN (277) 13 33 34 35 59 64
RPAREN (278) 13 33 34 35 59 64
LBRACE (279) 9 20 42
RBRACE (280) 9 20 42
LCURLY (281) 21
RCURLY (282) 21
SEMI (283) 8 9 31 32 36 37
COMMA (284) 17 67
ENDFILE (285)
ERROR (286)


Nonterminals, with rules where they appear

$accept (32)
    on left: 0
program (33)
    on left: 1, on right: 0
decl_list (34)
    on left: 2 3, on right: 1 2
decl (35)
    on left: 4 5, on right: 2 3
name (36)
    on left: 6, on right: 8 9 13 19 20 40 42 64
number (37)
    on left: 7, on right: 9
var_decl (38)
    on left: 8 9, on right: 4 22
type_spec (39)
    on left: 10 11, on right: 8 9 13 19 20
fun_decl (40)
    on left: 13, on right: 5
@1 (41)
    on left: 12, on right: 13
void_param (42)
    on left: 14, on right: 16
params (43)
    on left: 15 16, on right: 13
param_list (44)
    on left: 17 18, on right: 15 17
param (45)
    on left: 19 20, on right: 17 18
comp_stmt (46)
    on left: 21, on right: 13 27
local_decl (47)
    on left: 22 23, on right: 21 22
stmt_list (48)
    on left: 24 25, on right: 21 24
stmt (49)
    on left: 26 27 28 29 30, on right: 24 33 34 35
exp_stmt (50)
    on left: 31 32, on right: 26
selec_stmt (51)
    on left: 33 34, on right: 28
iter_stmt (52)
    on left: 35, on right: 29
return_stmt (53)
    on left: 36 37, on right: 30
exp (54)
    on left: 38 39, on right: 31 33 34 35 37 38 42 59 67 68
var (55)
    on left: 40 42, on right: 38 60
@2 (56)
    on left: 41, on right: 42
simple_exp (57)
    on left: 43 44, on right: 39
relop (58)
    on left: 45 46 47 48 49 50, on right: 43
addit_exp (59)
    on left: 51 52, on right: 43 44 51
addop (60)
    on left: 53 54, on right: 51
term (61)
    on left: 55 56, on right: 51 52 55
mulop (62)
    on left: 57 58, on right: 55
factor (63)
    on left: 59 60 61 62, on right: 55 56
call (64)
    on left: 64, on right: 61
@3 (65)
    on left: 63, on right: 64
args (66)
    on left: 65 66, on right: 64
arg_list (67)
    on left: 67 68, on right: 65 67


State 0

    0 $accept: . program $end

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    program    go to state 3
    decl_list  go to state 4
    decl       go to state 5
    var_decl   go to state 6
    type_spec  go to state 7
    fun_decl   go to state 8


State 1

   10 type_spec: INT .

    $default  reduce using rule 10 (type_spec)


State 2

   11 type_spec: VOID .

    $default  reduce using rule 11 (type_spec)


State 3

    0 $accept: program . $end

    $end  shift, and go to state 9


State 4

    1 program: decl_list .
    2 decl_list: decl_list . decl

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 1 (program)

    decl       go to state 10
    var_decl   go to state 6
    type_spec  go to state 7
    fun_decl   go to state 8


State 5

    3 decl_list: decl .

    $default  reduce using rule 3 (decl_list)


State 6

    4 decl: var_decl .

    $default  reduce using rule 4 (decl)


State 7

    8 var_decl: type_spec . name SEMI
    9         | type_spec . name LBRACE number RBRACE SEMI
   13 fun_decl: type_spec . name @1 LPAREN params RPAREN comp_stmt

    ID  shift, and go to state 11

    name  go to state 12


State 8

    5 decl: fun_decl .

    $default  reduce using rule 5 (decl)


State 9

    0 $accept: program $end .

    $default  accept


State 10

    2 decl_list: decl_list decl .

    $default  reduce using rule 2 (decl_list)


State 11

    6 name: ID .

    $default  reduce using rule 6 (name)


State 12

    8 var_decl: type_spec name . SEMI
    9         | type_spec name . LBRACE number RBRACE SEMI
   13 fun_decl: type_spec name . @1 LPAREN params RPAREN comp_stmt

    LBRACE  shift, and go to state 13
    SEMI    shift, and go to state 14

    $default  reduce using rule 12 (@1)

    @1  go to state 15


State 13

    9 var_decl: type_spec name LBRACE . number RBRACE SEMI

    NUM  shift, and go to state 16

    number  go to state 17


State 14

    8 var_decl: type_spec name SEMI .

    $default  reduce using rule 8 (var_decl)


State 15

   13 fun_decl: type_spec name @1 . LPAREN params RPAREN comp_stmt

    LPAREN  shift, and go to state 18


State 16

    7 number: NUM .

    $default  reduce using rule 7 (number)


State 17

    9 var_decl: type_spec name LBRACE number . RBRACE SEMI

    RBRACE  shift, and go to state 19


State 18

   13 fun_decl: type_spec name @1 LPAREN . params RPAREN comp_stmt

    INT   shift, and go to state 1
    VOID  shift, and go to state 20

    type_spec   go to state 21
    void_param  go to state 22
    params      go to state 23
    param_list  go to state 24
    param       go to state 25


State 19

    9 var_decl: type_spec name LBRACE number RBRACE . SEMI

    SEMI  shift, and go to state 26


State 20

   11 type_spec: VOID .
   14 void_param: VOID .

    RPAREN    reduce using rule 14 (void_param)
    $default  reduce using rule 11 (type_spec)


State 21

   19 param: type_spec . name
   20      | type_spec . name LBRACE RBRACE

    ID  shift, and go to state 11

    name  go to state 27


State 22

   16 params: void_param .

    $default  reduce using rule 16 (params)


State 23

   13 fun_decl: type_spec name @1 LPAREN params . RPAREN comp_stmt

    RPAREN  shift, and go to state 28


State 24

   15 params: param_list .
   17 param_list: param_list . COMMA param

    COMMA  shift, and go to state 29

    $default  reduce using rule 15 (params)


State 25

   18 param_list: param .

    $default  reduce using rule 18 (param_list)


State 26

    9 var_decl: type_spec name LBRACE number RBRACE SEMI .

    $default  reduce using rule 9 (var_decl)


State 27

   19 param: type_spec name .
   20      | type_spec name . LBRACE RBRACE

    LBRACE  shift, and go to state 30

    $default  reduce using rule 19 (param)


State 28

   13 fun_decl: type_spec name @1 LPAREN params RPAREN . comp_stmt

    LCURLY  shift, and go to state 31

    comp_stmt  go to state 32


State 29

   17 param_list: param_list COMMA . param

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    type_spec  go to state 21
    param      go to state 33


State 30

   20 param: type_spec name LBRACE . RBRACE

    RBRACE  shift, and go to state 34


State 31

   21 comp_stmt: LCURLY . local_decl stmt_list RCURLY

    $default  reduce using rule 23 (local_decl)

    local_decl  go to state 35


State 32

   13 fun_decl: type_spec name @1 LPAREN params RPAREN comp_stmt .

    $default  reduce using rule 13 (fun_decl)


State 33

   17 param_list: param_list COMMA param .

    $default  reduce using rule 17 (param_list)


State 34

   20 param: type_spec name LBRACE RBRACE .

    $default  reduce using rule 20 (param)


State 35

   21 comp_stmt: LCURLY local_decl . stmt_list RCURLY
   22 local_decl: local_decl . var_decl

    INT   shift, and go to state 1
    VOID  shift, and go to state 2

    $default  reduce using rule 25 (stmt_list)

    var_decl   go to state 36
    type_spec  go to state 37
    stmt_list  go to state 38


State 36

   22 local_decl: local_decl var_decl .

    $default  reduce using rule 22 (local_decl)


State 37

    8 var_decl: type_spec . name SEMI
    9         | type_spec . name LBRACE number RBRACE SEMI

    ID  shift, and go to state 11

    name  go to state 39


State 38

   21 comp_stmt: LCURLY local_decl stmt_list . RCURLY
   24 stmt_list: stmt_list . stmt

    IF      shift, and go to state 40
    WHILE   shift, and go to state 41
    RETURN  shift, and go to state 42
    ID      shift, and go to state 11
    NUM     shift, and go to state 43
    LPAREN  shift, and go to state 44
    LCURLY  shift, and go to state 31
    RCURLY  shift, and go to state 45
    SEMI    shift, and go to state 46

    name         go to state 47
    comp_stmt    go to state 48
    stmt         go to state 49
    exp_stmt     go to state 50
    selec_stmt   go to state 51
    iter_stmt    go to state 52
    return_stmt  go to state 53
    exp          go to state 54
    var          go to state 55
    simple_exp   go to state 56
    addit_exp    go to state 57
    term         go to state 58
    factor       go to state 59
    call         go to state 60


State 39

    8 var_decl: type_spec name . SEMI
    9         | type_spec name . LBRACE number RBRACE SEMI

    LBRACE  shift, and go to state 13
    SEMI    shift, and go to state 14


State 40

   33 selec_stmt: IF . LPAREN exp RPAREN stmt
   34           | IF . LPAREN exp RPAREN stmt ELSE stmt

    LPAREN  shift, and go to state 61


State 41

   35 iter_stmt: WHILE . LPAREN exp RPAREN stmt

    LPAREN  shift, and go to state 62


State 42

   36 return_stmt: RETURN . SEMI
   37            | RETURN . exp SEMI

    ID      shift, and go to state 11
    NUM     shift, and go to state 43
    LPAREN  shift, and go to state 44
    SEMI    shift, and go to state 63

    name        go to state 47
    exp         go to state 64
    var         go to state 55
    simple_exp  go to state 56
    addit_exp   go to state 57
    term        go to state 58
    factor      go to state 59
    call        go to state 60


State 43

   62 factor: NUM .

    $default  reduce using rule 62 (factor)


State 44

   59 factor: LPAREN . exp RPAREN

    ID      shift, and go to state 11
    NUM     shift, and go to state 43
    LPAREN  shift, and go to state 44

    name        go to state 47
    exp         go to state 65
    var         go to state 55
    simple_exp  go to state 56
    addit_exp   go to state 57
    term        go to state 58
    factor      go to state 59
    call        go to state 60


State 45

   21 comp_stmt: LCURLY local_decl stmt_list RCURLY .

    $default  reduce using rule 21 (comp_stmt)


State 46

   32 exp_stmt: SEMI .

    $default  reduce using rule 32 (exp_stmt)


State 47

   40 var: name .
   42    | name . @2 LBRACE exp RBRACE
   64 call: name . @3 LPAREN args RPAREN

    LPAREN    reduce using rule 63 (@3)
    LBRACE    reduce using rule 41 (@2)
    $default  reduce using rule 40 (var)

    @2  go to state 66
    @3  go to state 67


State 48

   27 stmt: comp_stmt .

    $default  reduce using rule 27 (stmt)


State 49

   24 stmt_list: stmt_list stmt .

    $default  reduce using rule 24 (stmt_list)


State 50

   26 stmt: exp_stmt .

    $default  reduce using rule 26 (stmt)


State 51

   28 stmt: selec_stmt .

    $default  reduce using rule 28 (stmt)


State 52

   29 stmt: iter_stmt .

    $default  reduce using rule 29 (stmt)


State 53

   30 stmt: return_stmt .

    $default  reduce using rule 30 (stmt)


State 54

   31 exp_stmt: exp . SEMI

    SEMI  shift, and go to state 68


State 55

   38 exp: var . ASSIGN exp
   60 factor: var .

    ASSIGN  shift, and go to state 69

    $default  reduce using rule 60 (factor)


State 56

   39 exp: simple_exp .

    $default  reduce using rule 39 (exp)


State 57

   43 simple_exp: addit_exp . relop addit_exp
   44           | addit_exp .
   51 addit_exp: addit_exp . addop term

    EQ     shift, and go to state 70
    NE     shift, and go to state 71
    LT     shift, and go to state 72
    LE     shift, and go to state 73
    GT     shift, and go to state 74
    GE     shift, and go to state 75
    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77

    $default  reduce using rule 44 (simple_exp)

    relop  go to state 78
    addop  go to state 79


State 58

   52 addit_exp: term .
   55 term: term . mulop factor

    TIMES  shift, and go to state 80
    OVER   shift, and go to state 81

    $default  reduce using rule 52 (addit_exp)

    mulop  go to state 82


State 59

   56 term: factor .

    $default  reduce using rule 56 (term)


State 60

   61 factor: call .

    $default  reduce using rule 61 (factor)


State 61

   33 selec_stmt: IF LPAREN . exp RPAREN stmt
   34           | IF LPAREN . exp RPAREN stmt ELSE stmt

    ID      shift, and go to state 11
    NUM     shift, and go to state 43
    LPAREN  shift, and go to state 44

    name        go to state 47
    exp         go to state 83
    var         go to state 55
    simple_exp  go to state 56
    addit_exp   go to state 57
    term        go to state 58
    factor      go to state 59
    call        go to state 60


State 62

   35 iter_stmt: WHILE LPAREN . exp RPAREN stmt

    ID      shift, and go to state 11
    NUM     shift, and go to state 43
    LPAREN  shift, and go to state 44

    name        go to state 47
    exp         go to state 84
    var         go to state 55
    simple_exp  go to state 56
    addit_exp   go to state 57
    term        go to state 58
    factor      go to state 59
    call        go to state 60


State 63

   36 return_stmt: RETURN SEMI .

    $default  reduce using rule 36 (return_stmt)


State 64

   37 return_stmt: RETURN exp . SEMI

    SEMI  shift, and go to state 85


State 65

   59 factor: LPAREN exp . RPAREN

    RPAREN  shift, and go to state 86


State 66

   42 var: name @2 . LBRACE exp RBRACE

    LBRACE  shift, and go to state 87


State 67

   64 call: name @3 . LPAREN args RPAREN

    LPAREN  shift, and go to state 88


State 68

   31 exp_stmt: exp SEMI .

    $default  reduce using rule 31 (exp_stmt)


State 69

   38 exp: var ASSIGN . exp

    ID      shift, and go to state 11
    NUM     shift, and go to state 43
    LPAREN  shift, and go to state 44

    name        go to state 47
    exp         go to state 89
    var         go to state 55
    simple_exp  go to state 56
    addit_exp   go to state 57
    term        go to state 58
    factor      go to state 59
    call        go to state 60


State 70

   49 relop: EQ .

    $default  reduce using rule 49 (relop)


State 71

   50 relop: NE .

    $default  reduce using rule 50 (relop)


State 72

   45 relop: LT .

    $default  reduce using rule 45 (relop)


State 73

   46 relop: LE .

    $default  reduce using rule 46 (relop)


State 74

   47 relop: GT .

    $default  reduce using rule 47 (relop)


State 75

   48 relop: GE .

    $default  reduce using rule 48 (relop)


State 76

   53 addop: PLUS .

    $default  reduce using rule 53 (addop)


State 77

   54 addop: MINUS .

    $default  reduce using rule 54 (addop)


State 78

   43 simple_exp: addit_exp relop . addit_exp

    ID      shift, and go to state 11
    NUM     shift, and go to state 43
    LPAREN  shift, and go to state 44

    name       go to state 47
    var        go to state 90
    addit_exp  go to state 91
    term       go to state 58
    factor     go to state 59
    call       go to state 60


State 79

   51 addit_exp: addit_exp addop . term

    ID      shift, and go to state 11
    NUM     shift, and go to state 43
    LPAREN  shift, and go to state 44

    name    go to state 47
    var     go to state 90
    term    go to state 92
    factor  go to state 59
    call    go to state 60


State 80

   57 mulop: TIMES .

    $default  reduce using rule 57 (mulop)


State 81

   58 mulop: OVER .

    $default  reduce using rule 58 (mulop)


State 82

   55 term: term mulop . factor

    ID      shift, and go to state 11
    NUM     shift, and go to state 43
    LPAREN  shift, and go to state 44

    name    go to state 47
    var     go to state 90
    factor  go to state 93
    call    go to state 60


State 83

   33 selec_stmt: IF LPAREN exp . RPAREN stmt
   34           | IF LPAREN exp . RPAREN stmt ELSE stmt

    RPAREN  shift, and go to state 94


State 84

   35 iter_stmt: WHILE LPAREN exp . RPAREN stmt

    RPAREN  shift, and go to state 95


State 85

   37 return_stmt: RETURN exp SEMI .

    $default  reduce using rule 37 (return_stmt)


State 86

   59 factor: LPAREN exp RPAREN .

    $default  reduce using rule 59 (factor)


State 87

   42 var: name @2 LBRACE . exp RBRACE

    ID      shift, and go to state 11
    NUM     shift, and go to state 43
    LPAREN  shift, and go to state 44

    name        go to state 47
    exp         go to state 96
    var         go to state 55
    simple_exp  go to state 56
    addit_exp   go to state 57
    term        go to state 58
    factor      go to state 59
    call        go to state 60


State 88

   64 call: name @3 LPAREN . args RPAREN

    ID      shift, and go to state 11
    NUM     shift, and go to state 43
    LPAREN  shift, and go to state 44

    $default  reduce using rule 66 (args)

    name        go to state 47
    exp         go to state 97
    var         go to state 55
    simple_exp  go to state 56
    addit_exp   go to state 57
    term        go to state 58
    factor      go to state 59
    call        go to state 60
    args        go to state 98
    arg_list    go to state 99


State 89

   38 exp: var ASSIGN exp .

    $default  reduce using rule 38 (exp)


State 90

   60 factor: var .

    $default  reduce using rule 60 (factor)


State 91

   43 simple_exp: addit_exp relop addit_exp .
   51 addit_exp: addit_exp . addop term

    PLUS   shift, and go to state 76
    MINUS  shift, and go to state 77

    $default  reduce using rule 43 (simple_exp)

    addop  go to state 79


State 92

   51 addit_exp: addit_exp addop term .
   55 term: term . mulop factor

    TIMES  shift, and go to state 80
    OVER   shift, and go to state 81

    $default  reduce using rule 51 (addit_exp)

    mulop  go to state 82


State 93

   55 term: term mulop factor .

    $default  reduce using rule 55 (term)


State 94

   33 selec_stmt: IF LPAREN exp RPAREN . stmt
   34           | IF LPAREN exp RPAREN . stmt ELSE stmt

    IF      shift, and go to state 40
    WHILE   shift, and go to state 41
    RETURN  shift, and go to state 42
    ID      shift, and go to state 11
    NUM     shift, and go to state 43
    LPAREN  shift, and go to state 44
    LCURLY  shift, and go to state 31
    SEMI    shift, and go to state 46

    name         go to state 47
    comp_stmt    go to state 48
    stmt         go to state 100
    exp_stmt     go to state 50
    selec_stmt   go to state 51
    iter_stmt    go to state 52
    return_stmt  go to state 53
    exp          go to state 54
    var          go to state 55
    simple_exp   go to state 56
    addit_exp    go to state 57
    term         go to state 58
    factor       go to state 59
    call         go to state 60


State 95

   35 iter_stmt: WHILE LPAREN exp RPAREN . stmt

    IF      shift, and go to state 40
    WHILE   shift, and go to state 41
    RETURN  shift, and go to state 42
    ID      shift, and go to state 11
    NUM     shift, and go to state 43
    LPAREN  shift, and go to state 44
    LCURLY  shift, and go to state 31
    SEMI    shift, and go to state 46

    name         go to state 47
    comp_stmt    go to state 48
    stmt         go to state 101
    exp_stmt     go to state 50
    selec_stmt   go to state 51
    iter_stmt    go to state 52
    return_stmt  go to state 53
    exp          go to state 54
    var          go to state 55
    simple_exp   go to state 56
    addit_exp    go to state 57
    term         go to state 58
    factor       go to state 59
    call         go to state 60


State 96

   42 var: name @2 LBRACE exp . RBRACE

    RBRACE  shift, and go to state 102


State 97

   68 arg_list: exp .

    $default  reduce using rule 68 (arg_list)


State 98

   64 call: name @3 LPAREN args . RPAREN

    RPAREN  shift, and go to state 103


State 99

   65 args: arg_list .
   67 arg_list: arg_list . COMMA exp

    COMMA  shift, and go to state 104

    $default  reduce using rule 65 (args)


State 100

   33 selec_stmt: IF LPAREN exp RPAREN stmt .
   34           | IF LPAREN exp RPAREN stmt . ELSE stmt

    ELSE  shift, and go to state 105

    ELSE      [reduce using rule 33 (selec_stmt)]
    $default  reduce using rule 33 (selec_stmt)


State 101

   35 iter_stmt: WHILE LPAREN exp RPAREN stmt .

    $default  reduce using rule 35 (iter_stmt)


State 102

   42 var: name @2 LBRACE exp RBRACE .

    $default  reduce using rule 42 (var)


State 103

   64 call: name @3 LPAREN args RPAREN .

    $default  reduce using rule 64 (call)


State 104

   67 arg_list: arg_list COMMA . exp

    ID      shift, and go to state 11
    NUM     shift, and go to state 43
    LPAREN  shift, and go to state 44

    name        go to state 47
    exp         go to state 106
    var         go to state 55
    simple_exp  go to state 56
    addit_exp   go to state 57
    term        go to state 58
    factor      go to state 59
    call        go to state 60


State 105

   34 selec_stmt: IF LPAREN exp RPAREN stmt ELSE . stmt

    IF      shift, and go to state 40
    WHILE   shift, and go to state 41
    RETURN  shift, and go to state 42
    ID      shift, and go to state 11
    NUM     shift, and go to state 43
    LPAREN  shift, and go to state 44
    LCURLY  shift, and go to state 31
    SEMI    shift, and go to state 46

    name         go to state 47
    comp_stmt    go to state 48
    stmt         go to state 107
    exp_stmt     go to state 50
    selec_stmt   go to state 51
    iter_stmt    go to state 52
    return_stmt  go to state 53
    exp          go to state 54
    var          go to state 55
    simple_exp   go to state 56
    addit_exp    go to state 57
    term         go to state 58
    factor       go to state 59
    call         go to state 60


State 106

   67 arg_list: arg_list COMMA exp .

    $default  reduce using rule 67 (arg_list)


State 107

   34 selec_stmt: IF LPAREN exp RPAREN stmt ELSE stmt .

    $default  reduce using rule 34 (selec_stmt)
